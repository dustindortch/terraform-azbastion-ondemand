---
name: Apply Azure Bastion Host

on:
  repository_dispatch:
  workflow_dispatch:

permissions:
  id-token: write
  issues: write
  pull-requests: write
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      ARM_USE_OIDC: true
      ARM_USE_AZUREAD: true
      ARM_CLIENT_ID: ${{vars.AZURE_CLIENT_ID}}
      ARM_TENANT_ID: ${{vars.AZURE_TENANT_ID}}
      ARM_SUBSCRIPTION_ID: ${{vars.AZURE_SUBSCRIPTION_ID}}
      TF_LOG: INFO

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: AZ CLI Login
      uses: azure/login@v1
      with:
        client-id: ${{ var.AZURE_CLIENT_ID }}
        tenant-id: ${{ var.AZURE_TENANT_ID }}
        subscription-id: ${{ var.AZURE_SUBSCRIPTION_ID }}

    - name: Show AZ Subscription
      run: az account show

    - name: Download TFVARS
      id: download-tfvars
      run: >
        az storage blob download
        --file ./terraform.tfvars
        --account-name ${{vars.TFSTATE_STORAGE_ACCOUNT_NAME}}
        --container-name ${{vars.TFSTATE_CONTAINER_NAME}}
        --name ${{vars.TFVARS_BLOB_NAME}}

    - name: Show TFVARS
      id: show-tfvars
      run: cat ./terraform.tfvars

    - name: Terraform Backend
      id: Backend
      run: |
        cat > backend.tf << EOF
        terraform {
          backend "azurerm" {
            resource_group_name  = "${{vars.TFSTATE_RESOURCE_GROUP_NAME}}"
            storage_account_name = "${{vars.TFSTATE_STORAGE_ACCOUNT_NAME}}"
            container_name       = "${{vars.TFSTATE_CONTAINER_NAME}}"
            key                  = "${{vars.TFSTATE_KEY}}"
          }
        }
        EOF

    - name: Terraform Initialization
      id: init
      run: terraform init

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
...
